#################################
Diagrama general de context (DGC)
#################################

El diagrama general de context (DGC [#dgc]_)d'una aplicació és una
representació gràfica de l'aplicació com una bombolla, dels usuaris (tots
els elements externs amb que es relaciona aquesta) i l'intercanvi de dades
que es realitza entre l'aplicació i els usuaris.

Serveix per fer-se una primera idea de l'abast de l'aplicació.

.. uml::
    :align: center
    :caption: DGC del Penjat

    @startuml
    left to right direction

    rectangle Penjat
    actor Jugador


    Penjat --> Jugador #black : paraula
    Penjat --> Jugador #black : màscara
    Penjat --> Jugador #black : errors
    Penjat --> Jugador #black : resultat
    Jugador --> Penjat #black : lletra
    Jugador --> Penjat #black : nova partida
    Jugador --> Penjat #black : abandonament

    skinparam actor {
        BackgroundColor White
        BorderColor Black
    }
    skinparam rectangle {
        BackgroundColor White
        BorderColor Black
    }
    @enduml

Els elements importants són:

* El nom de l'aplicació emmarcat [#marc]_, que representarà l'aplicació

  En aquest cas **Penjat**.

* Els elements externs significatius, al voltant del marc

  A aquests elements els direm *actors*. Tindran un nom descriptiu breu i, si cal, acompanyarem el
  DGC amb una descripció de les característiques que vulguem ressaltar.

  En el cas de l'aplicació del joc del penjat, només tenim un actor que
  anomenem **Jugador**.

  Per exemple:

  .. code-block:: none

    Actor: Jugador

    Descripció: És l'únic usuari de l'aplicació. Arrenca l'aplicació,
    introdueix les lletres per endevinar la paraula i, notifica que vol
    abandonar la partida actual o bé finalitzar el joc

* Intercanvi de dades

  L'intercanvi de dades entre els actors i l'aplicació, es representa
  mitjançant fletxes:

  - Cada fletxa indicarà un o més intercanvis de dades

    S'etiqueta amb un o més mots que descriuen les dades que
    s'intercanvien

    - El sentit de la fletxa indica qui envia les dades a qui. Per
      exemple, el jugador del Penjat, envia una nova lletra al joc, mentre
      que el joc li envia la paraula emmascarada al jugador.

  - Les etiquetes de dades són noms i no verbs. Per exemple, no hi posarem
    *introdueix* o *llegeix*

Més sobre els actors
====================

Els actors són, per la nostra aplicació, fonts:

* de requeriments a satisfer

* d'informació que haurà de contemplar

Els actors no són sempre el nostre client. De fet, sovint no ho són pas!

Quan desenvolupem una aplicació, hem de tenir clars els següents conceptes:

* el client: és qui ens fa la comanda i ens pagarà quan tinguiem el producte. El client no
  sempre serà usuari de l'aplicació que estem construïnt.

* els clients del nostre client: és per a qui el nostre client ens demana el producte. Sovint
  són alguns dels usuaris de l'aplicació que volem construir.

* els usuaris: són els que realment intereaccionaran amb l'aplicació en construcció. Ens
  interessa molt saber qui són (ex. Què saben fer, com ho saben fer), que n'han de treure de
  l'aplicació (necessitats), etc.

Per nosaltres, els usuaris de l'aplicació seran *actors* d'aquesta.

Hi ha, però, d'altres actors *no humans* que també interaccionaran amb l'aplicació i que, per tant,
caldrà identificar. Alguns exemples:

* bases de dades externes

  Són bases de dades que no crearem per la nostra aplicació i per les que podem tenir un accés més o
  menys limitat.

* altres aplicacions com ara un sistema d'autorització de pagament online,

* dispositius externs com ara sensors de temperatura, el lector de targetes de crèdit…

  Normalment no inclourem dispositius estàndards com ara el teclat o la pantalla, i suposarem que
  els usuaris humans es comuniquen directament (encara que ho faran mitjançant aquests dispositius)

Sovint, els elements que interaccionen amb el nostre sistema es veuran agrupats en forma de *rols*.
Per exemple, no considerarem els caixers concrets del TPV (la Marta, l'Abid, en Xiao) sinó que en
parlarem genèricament com *caixers*, doncs és aquest el rol que en fan.

Una persona concreta pot tenir més d'un rol per la nostra aplicació. Per exemple, la Marta pot ser a
l'hora caixera i administradora. Al DGC hi considerarem els dos rols com a actors separats.

Quan els haguem de representar gràficament, normalment farem servir els
*homenets de pal* o *sticky men* ja siguin actors humans, taules d'una
base de dades o aplicacions amb les que interaccionarem. 

.. uml::
    :align: center
    :caption: Exemples d'actors

    @startuml
    left to right direction

    actor GoogleAuth
    actor VEHICLES
    actor Llogater

    note right of Llogater
      Aquest és un actor humà
    end note

    note left of VEHICLES
      Aquest actor correspon a una
      taula d'una base de dades
    end note


    note right of GoogleAuth
      Aquest actor correspon a una
      aplicació
    end note

    skinparam actor {
        BackgroundColor White
        BorderColor Black
        ArrowColor Black
    }
    @enduml

|exerciseiconO__| :doc:`exercici_53_02_lloguer_vehicles`

|exerciseiconO__| :doc:`exercici_53_03_gestio_centre`

|exerciseiconO__| :doc:`exercici_53_02_lloguer_vehicles`

|exerciseiconO__| :doc:`exercici_53_03_gestio_centre`

|exerciseiconO__| :doc:`exercici_53_04_cervesera`

|exerciseicon___| :doc:`exercici_53_05_naus_industrials`

|exerciseicon___| :doc:`exercici_53_06_el_meu_projecte`


----

.. [#dgc] Els DGCs no formen part dels diagrames de UML sinò d'una
   notació més antiga anomenada *Diagrames de Flux de Dades* (DFD).
   UML ofereix la seva pròpia versió de diagrames de context en la
   que, malauradament, es perd part de les bondats dels DGCs,
   especialment la senzillesa. En aquest curs ens saltarem la notació
   de diagrames de context de UML i farem servir una notació adaptada
   a UML dels DFDs.

   Si tens interés, pots trobar més informació respecte els `diagrames de
   flux de dades <https://en.wikipedia.org/wiki/Data-flow_diagram>`_ i del
   `diagrama general de context
   <https://en.wikipedia.org/wiki/System_context_diagram>`_

.. [#marc] Normalment el nom de l'aplicació s'emmarca dins d'un cercle.
   Ens aquests apunts, però, ens acostarem una mica més a la notació UML i
   farem servir un rectangle. Als exercicis podràs fer servir el que
   prefereixis.
