#####################################################
|exerciseicon__T| Exercici 03_08. Triat de matrícules
#####################################################

.. rubric:: Context

* Carpeta de lliurament: ``03_08_matricules_italianes/``

* Continguts relacionats: :doc:`fitxers_registres`

* Com lliurar-lo: :ref:`instruccions <instruccions_git>`

* [✓] Exercici amb :ref:`autoavaluació<descripcio_exercicis_autoavaluacio>`

.. rubric:: Enunciat

Disposem d'un fitxer anomenat ``matriculesllegides.txt`` que conté un
nombre, potencialment gran, de matrícules llegides automàticament a un
carrer d'alguna ciutat italiana.

Un exemple de contingut de ``matriculesllegides.txt`` pot ser:

.. code-block:: console
   :emphasize-lines: 2-

    $ cat matriculesllegides.txt
    BC123FG
    B2993NV
    FRV5996
    PR444RP
    4563BBB
    CHUCKY
    JK432HJ

Desenvolupa un programa que llegeixi ``matriculesllegides.txt`` i
generi dos nous fitxers anomenats ``matriculesvalides.txt`` i
``matriculeserronies.txt`` tals que:

* ``matriculesvalides.txt`` contingui totes les matrícules trobades
  a ``matriculesllegides.txt`` que corresponguin a matrícules vàlides
  italianes. Recorda, per exemple, :doc:`aquest exercici
  <exercici_02_18_matricula_italiana>`

* ``matriculeserronies.txt`` que correspongui a totes les matrícules
  trobades no vàlides com a matrícules italianes.

El programa no es preocuparà si ja existien o no els fitxers de sortida.
Sempre els sobreescriurà fins i tot si no hi ha cap dada que escriure a
algun d'ells.

Amb l'exemple anterior de ``matriculesllegides.txt`` tindríem el següent
resultat:

.. code-block:: console
   :emphasize-lines: 2-

    $ java TriaMatricules
    $ cat matriculesvalides.txt
    BC123FG
    PR444RP
    JK432HJ
    $ cat matriculeserronies.txt
    B2993NV
    FRV5996
    4563BBB
    CHUCKY

Donat que el contingut dels tres fitxers és potencialment molt gran, per
evitar consumir massa memòria, el programa hauria de processar cada línia
a mida que les llegeix, sense guardar les ja processades a memòria.

Podem suposar que el fitxer d'entrada sempre existirà i serà de text i
llegible, tot i que podria estar buit o contenir qualsevol text arbitrari.

Per passar totes les proves, serà necessari que disposis de la funció
``boolean matriculaItalianaValida(String)`` que, donat un text, retorni
``true`` quan correspon a una matrícula italiana vàlida.
