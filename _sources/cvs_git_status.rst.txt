#########################
Comprovar l'estat: status
#########################

Ja hem vist que els fitxers poden estar en diferents estats des de la
perspectiva de Git.

Considera el següent diagrama d'estats pels que pot passar un fitxer.

.. figure:: /_images/cvs_img006_estatsfull.png
   :alt: tots els estats
   :align: center

Quan crees un nou fitxer en el directori de treball, comença en estat
*no gestionat*. Ja hem vist que el podem afegir (i treure) de la
gestió de Git amb la comanda ``add`` (i ``rm``). Un cop està
gestionat, es considerarà *no modificat* si el seu contingut
coincideix amb el darrer registrat (*commit*). En cas de modificació,
apareixerà com a *modificat* (o també *unstaged*) fins que el passem a
*stage*. Finalment, quan registrem els canvis (amb un *commit*) el
fitxer torna a estat *no modificat*.

En qualsevol moment pots comprovar l'estat del contingut del teu
directori de treball des de la perspectiva de Git, fent servir la
comanda ``git status``.

.. code-block:: console

    projecte$ git status
    # On branch master
    #
    # Initial commit
    #
    # Changes to be committed:
    #   (use "git rm --cached <file>..." to unstage)
    #
    #	new file:   hola.txt
    #

En aquest cas ens trobem que Git ens informa que:

* estem a la branca de desenvolupament *master* (ja veurem més tard
  que vol dir això)

* tenim a l'àrea de *stage* el fitxer ``hola.txt`` i el podem eliminar
  de *stage* si fem servir la comanda ``git rm``. Ja t'he dit que les
  comandes Git sovint et donaran pistes de comandes relacionades.

