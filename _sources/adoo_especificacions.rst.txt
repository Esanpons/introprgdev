###############################
Especificacions dels casos d'ús
###############################


La notació gràfica de UML, ens aporta una valuosa primera impressió visual, però no ofereix gaire
detall.

Enriquirem els nostres diagrames amb el que es coneix com *especificació del cas d'ús*

Es tracta d'un document amb els següents punts:

1. Identificació del cas d'ús

2. Breu descripció

3. Historia d'usuari

4. Curs principal

5. Fluxos alternatius

6. Requeriments addicionals


1. Identificació del cas d'ús
=============================

La identificació del cas d'ús conté dues parts:

* un codi: és un valor opcional que permet referir-nos al cas d'ús més eficientment.

  Per exemple, podríem codificar els cas d'afegir una nova lletra al joc del
  Penjat simplement com a *cas 1* o *Penjat01* o *P01*.

* un títol: és el nom del cas d'ús. El que posem dins de l'oval als diagrames UML.

  Ja tenim uns quants exemples: *Afegir paraula*, *Comprovar disponibilitat* …

  Recorda: el títol ha de:

  * ser breu i significatiu

  * començar amb verb. És una acció

  * estar descrit des de la perspectiva de l'actor «Joc del Penjat, per favor, 
    afegeix-me aquesta nova lletra per comprovar si està dins de la paraula amagada»

2. Breu descripció
==================

Una frase o paràgraf breu que sol incloure:

* l'actor principal, i

* l'objectiu del cas d'ús

Per exemple, «El client pot comprovar la disponibilitat d'un determinat vehicle
o categoria en unes dates determinades»

Sovint amb aquesta breu descripció i la identificació del cas d'ús, ja en
tindrem prou per treballar amb els casos d'ús més senzills, que normalment
seran la majoria! D'aquestes dues parts en diem *snippets* funcionals.

Hi ha qui diu que els casos d'ús són com *snippets* funcionals amb smoking. El
cert és que, si podem fer amb *snippets*, cal plantejar-se si val la pena
dedicar el temps a fer una especificacio completa del cas d'ús. Sovint la
resposta és *no*.

Un exemple de *snippet*:

    Snippet: Comprovar disponibilitat

    Descripció: El client pot comprovar la disponibilitat d'un determinat vehicle o categoria en
    unes dates determinades


Quan treballem amb *snippets*, cal tenir present que hi ha alguns que no són funcionals, sinó
requeriments tècnics o restriccions. Per exemple, dels requeriments podem haver trobat que
l'aplicació a desenvolupar ha de poder-se accedida des d'un navegador concret o bé executar-se
nativament en Android a partir de la versió 4.0. Aquests requeriments s'afegirien també en forma de
*snippet* però no de cas d'ús, doncs és quelcom que no respon a un objectiu d'un actor.

    Snippet: funcionament multiplataforma

    Descripció: L'aplicació ha de funcionar tant en Web com, de manera nativa, en Android i en
    MacOS.


3. Història d'usuari
====================

De vegades, el cas d'ús no és tan evident com per quedar-nos amb un *snippet*.

Una manera d'aprofundir amb el que representa el cas d'ús és escriure un conte!

A aquest conte en direm *història d'usuari*.

És tracta d'una narració de tot el que succeeix en el cas d'ús

Les històries d'usuari

* expliquen com els actors interaccionen amb el programari en desenvolupament

* es centren en un únic cas d'ús

* han de ser comprensibles pel nostre client: hauran d'estar escrites en un
  llenguatge que el client entengui

* no haurien de ser un llarg assaig

* no haurien de fer servir termes tècnics no familiars pel client, ni mencionar
  tecnologies específiques

* sovint comença amb «Aquest cas comença quan l'actor XXX fa YYY» per a
  aconseguir ZZZ» i finalitza amb «En aquest moment, XXX ha aconseguit ZZZ».
  Entre mig, descriu el curs d'esdeveniments en una mena de diàleg entre actors
  i l'aplicació.

Un exemple

    Aquest cas d'ús comença quan el client visita la pàgina principal de la Web
    de l'aplicació de lloguer de vehicle per reservar un determinat model de
    vehicle dins d'unes dates.

    L'aplicació pregunta al client quin és el model de vehicle i en quines
    dates té interès.  El client defineix el model de vehicle desitjat i les
    dates.

    L'aplicació comprova la validesa de les dades introduïdes i avisa en cas
    d'error perquè el client pugui realitzar les correccions oportunes.

    Un cop les dades són vàlides, l'aplicació comprova la disponibilitat del
    model de vehicle a les dates especificades i, respon amb el resultat al
    client, incloent el preu del lloguer.

    En cas que no hagi disponibilitat del model de vehicle indicat però sí
    d'altres de la mateixa categoria, se li presentarà la llista de les
    disponibles juntament amb el preu corresponent.

    Si cap de les opcions proposades per l'aplicació satisfan els requeriments
    del client, aquest pot reespecificar dates o un altre model de vehicle, o
    bé finalitzar el cas d'ús sense realitzar la reserva.

    Tant si el model inicialment seleccionat estava disponible com si el client
    troba adequat un altre dels models proposats, en acceptar el client,
    l'aplicació li demanarà les dades de pagament.

    El client introdueix el seu nom, identificació, adreça de facturació,
    telèfon i adreça electrònica.

    L'aplicació redirigeix al client a la passarel·la de pagaments on el client
    podrà satisfer les dades de targeta de crèdit en la que es realitzarà el
    dipòsit.

    En cas que hagi hagut problemes amb el pagament, l'aplicació li ho
    notificarà al client a qui li oferirà la possibilitat de tornar-ho a
    intentar amb la passarel·la o bé finalitzar el cas d'ús sense finalitzar.

    En cas que la passarel·la de pagament indiqui que el pagament s'ha efectuat
    correctament, el sistema registrarà el lloguer i li ho notificarà al client
    tant amb un missatge a la pàgina web com amb un email.

    En aquest moment, el client ha aconseguit realitzar la reserva i el cas
    d'ús finalitza la reserva.


4. Curs principal
=================

Un cop el nostre client està content amb la història d'usuari, passem a
reestructurar-la en un format que ens resultarà més manegable.

Aquesta aproximació numera cada pas que dóna un actor i, a continuació, mostra
la resposta de l'aplicació.

Per exemple:

1. Aquest cas d'ús comença quan el client visita la pàgina principal de la Web
   de l'aplicació de lloguer de vehicles per reservar un determinat model de
   vehicle dins d'unes dates.

   1.1. L'aplicació pregunta al client quin és el model de vehicle i en quines
   dates té interès.

2. El client defineix el model de vehicle desitjat i les dates.

   2.1. L'aplicació comprova la validesa de les dades introduïdes

   2.2. L'aplicació comprova la disponibilitat del model de vehicle a les dates especificades.

   2.3. L'aplicació mostra la disponibilitat i el preu, i demana al client que accepti formalitzar
   la reserva

3. El client accepta formalitzar la reserva.

   3.1. L'aplicació ofereix un formulari on el client pot inserir les seves dades.

4. El client introdueix les seves dades d'identificació (nom, identificació, adreça de facturació,
   telèfon, correu electrònic)

   4.1. L'aplicació valida les dades d'identificació del client.

   4.2. L'aplicació redirigeix al client a la passarel·la de pagament perquè el client satisfaci el
   pagament del dipòsit.

5. La passarel·la de pagament notifica que el client ha satisfet el pagament del dipòsit

   5.1. L'aplicació confirma al client que la reserva s'ha realitzat amb èxit

   5.2. L'aplicació envia al client un email amb els detalls de la reserva.


5. Cursos alternatius
=====================

Fixa't que en aquest curs principal **tot** surt bé. No hi ha errors d'introducció de dades, el
vehicle està disponible dins les dates requerides, el pagament s'efectua sense problemes… En aquesta
secció tractarem els casos no tant directes que també es poden produir.

Existeix una notació en UML per mostrar aquests fluxos alternatius.

.. uml::
    :align: center

    @startuml

        left to right direction

        skinparam usecase {
            BackgroundColor white
                BorderColor black
                ArrowColor black
        }

        skinparam actor {
            BackgroundColor white
                BorderColor black
                ArrowColor black
        }

        usecase "Reservar vehicle" as (RESERVE)
        usecase "Dates invàlides" as (DATES)
        usecase "Vehicle no disponible" as (NODISPONIBLE)
        usecase "Modificar dades reserva" as (MODIFY)
        usecase "Dades d'identificació errònies" as (IDERROR)
        usecase "Error passarel·la de pagament" as (NOPAYMENT)
        usecase "Confirmació de pagament" as (PAYMENTOK)

        (RESERVE) <.. (DATES) :<<instance of>>
        (RESERVE) <.. (NODISPONIBLE) :<<instance of>>
        (RESERVE) <.. (MODIFY) :<<instance of>>
        (RESERVE) <.. (IDERROR) :<<instance of>>
        (RESERVE) <.. (NOPAYMENT) :<<instance of>>
        (RESERVE) <.. (PAYMENTOK) :<<instance of>>

    @enduml

Fixa't que cada cas alternatiu indica que és una instància del principal. Podem
entendre que cada instància és com una versió del cas principal.

Per especificar aquests fluxos alternatius, farem servir la numeració del cas
principal, tot indicant en quin punt es produeix l'alternativa i, en cas que es
torni al flux principal, en quin punt es reprèn.

Per exemple:

Flux alternatiu #1. Dates invàlides

El client ha arribat fins el pas 2. del flux principal però ha introduït un
interval de dates no vàlid

2.1. L'aplicació comprova la validesa de les dades introduïdes, i troba que
l'interval no és vàlid

2.2. L'aplicació mostra l'error al client i li ofereix la possibilitat
d'introduir novament les dades de la reserva.

A partir d'aquí, es torna a processar a partir del punt 2 del flux principal


6. Requeriments addicionals
===========================

Es tracta de regles de negoci o requeriments de validació que són requerits pel
cas d'ús.

Per exemple, el lloguer d'un vehicle podria estar limitat a dates entre un dia
i un mes, o la lletra a afegir al Penjat es podria requerir que no estigués ja
afegida.


Recapitulant
============

Posem totes les peces juntes de l'exemple que hem treballat.

    **Cas 42**. Reserva de vehicle

    El client pot reservar un determinat vehicle en unes dates determinades

    **Curs principal:**

    1. Aquest cas d'ús comença quan el client visita la pàgina principal de la
    Web de l'aplicació de lloguer de vehicles per reservar un determinat
    model de vehicle dins d'unes dates.

    1.1. L'aplicació pregunta al client quin és el model de vehicle i en quines
    dates té interès.

    2. El client defineix el model de vehicle desitjat i les dates.

    2.1. L'aplicació comprova la validesa de les dades introduïdes

    2.2. L'aplicació comprova la disponibilitat del model de vehicle a les
    dates especificades.

    2.3. L'aplicació mostra la disponibilitat i el preu, i demana al client que
    accepti formalitzar la reserva

    3. El client accepta formalitzar la reserva.

    3.1. L'aplicació ofereix un formulari on el client pot inserir les seves dades.

    4. El client introdueix les seves dades d'identificació (nom,
    identificació, adreça de facturació, telèfon, correu electrònic)

    4.1. L'aplicació valida les dades d'identificació del client.

    4.2. L'aplicació redirigeix al client a la passarel·la de pagament perquè
    el client satisfaci el pagament del dipòsit.

    5. La passarel·la de pagament notifica que el client ha satisfet el
    pagament del dipòsit

    5.1. L'aplicació confirma al client que la reserva s'ha realitzat amb èxit

    5.2. L'aplicació envia al client un email amb els detalls de la reserva.


    **Cursos alternatius:**

    2.1.a.1. L'aplicació comprova la validesa de les dades introduïdes, i troba que
    l'interval no és vàlid

    2.1.a.2. L'aplicació mostra l'error al client i li ofereix la possibilitat
    d'introduir novament les dades de la reserva.

    2.2.a.1. L'aplicació comprova la disponibilitat del model de vehicle a les
    dates especificades, i troba que no n'hi ha cap vehicle d'aquest model
    disponible per aquestes dates.

    2.2.a.2. L'aplicació mostra l'error al client i li ofereix la possibilitat
    d'introduir novament les dades de la reserva.

    3.a. El client no accepta formalitzar la reserva. L'aplicació li dóna les
    gràcies per l'interès i torna a la pàgina principal.

    4.a. El client cancel·la la introducció de dades. L'aplicació li dóna les
    gràcies per l'interès i torna a la pàgina principal.

    4.1.a.1. L'aplicació valida les dades d'identificació del client, i troba
    que hi ha dades no vàlides.

    4.1.a.2. L'aplicació torna a oferir el formulari al client, tot remarcant
    les dades no vàlides.

    5.a. La passarel·la de pagament notifica que el client no ha satisfet el
    pagament del dipòsit. L'aplicació notifica al client sobre la situació, li
    demana disculpes pels inconvenients i torna a la pàgina principal.

.. note:: El format anterior, així com la notació en la numeració, no són
   *normatius*. És a dir, és quelcom força lliure sempre i quant quedin clars
   els diferents punts i es mostri coherència amb la resta de casos d'ús
   especificats.


|exerciseiconO__| :doc:`exercici_53_12_espec_vehicles`

|exerciseiconO__| :doc:`exercici_53_13_especs_centre`

|exerciseiconO__| :doc:`exercici_53_14_especs_cervesera`

|exerciseicon___| :doc:`exercici_53_15_especs_naus`

|exerciseicon___| :doc:`exercici_53_16_especs_meu_projecte`
