################
Passar a *stage*
################

Per veure com passar canvis a *stage* ens cal modificar un fitxer.

Modifiquem el fitxer ``hola.txt`` del nostre exemple. Haurem de
canviar-li realment el contingut, donat que Git no considerarà que
està modificat si li fas un simple ``touch``

.. code-block:: console

    projecte$ echo "adéu" >> hola.txt
    projecte$ git status
    # On branch master
    # Changes not staged for commit:
    #   (use "git add <file>..." to update what will be committed)
    #   (use "git checkout -- <file>..." to discard changes in working directory)
    #
    #	modified:   hola.txt
    #
    no changes added to commit (use "git add" and/or "git commit -a")

Observa com ara, Git t'informa que el contingut del fitxer ha estat
modificat. També ens informa que podem passar aquest canvis a *stage*
fent servir (novament) la comanda ``add``, i que podem recuperar els
continguts anteriors fent servir ``checkout``.

Anem a afegir els canvis a *stage* seguint les indicacions del propi
Git. És a dir, farem servir un altre cop la comanda ``add`` que, en
aquest cas té un significat lleugerament diferent al que ja coneixíem:
en comptes d'afegir un nou fitxer, *afegeix* uns nous continguts.

.. code-block:: console

    projecte$ git add hola.txt
    projecte$ git status
    # On branch master
    # Changes to be committed:
    #   (use "git reset HEAD <file>..." to unstage)
    #
    #	modified:   hola.txt
    #

Veiem que ara ``hola.txt`` apareix com a modificat. Git ens suggereix
com passar a l'estat anterior (abans de *stage*) fent servir
``reset``.

En aquest cas registrarem els canvis amb

.. code-block:: console

    projecte$ git commit -m "Afegit adéu"
    [master 831889e] Afegit adéu
     1 file changed, 1 insertion(+)
    projecte$ git status
    # On branch master
    nothing to commit (working directory clean)

És molt habitual aquest cicle: modifiquem fitxer -> passem a *stage*
-> registrem el canvi. Tant, que els desenvolupadors de Git ens
ofereixen una petita drecera. Considera l'exemple següent i fixa't en
la nova opció ``-a`` pel ``commit``

.. code-block:: console

    projecte$ echo "gutbai" >> hola.txt
    projecte$ git commit -am "Afegit adéu en inglish"
    [master b4d88ea] Afegit adéu en inglish
     1 file changed, 1 insertion(+)
