###############################################################
|exerciseiconO_T| Exercici 03_13. Puzle d'escacs: duplica puzle
###############################################################

.. rubric:: Context

* Carpeta de lliurament: ``03_13_cp/``

* Continguts relacionats: :doc:`exercici_03_08_puzles`

* Com lliurar-lo: :ref:`instruccions <instruccions_git>`

* [☼] Exercici :ref:`optatiu<descripcio_exercicis_optatius>`

* [✓] Exercici amb :ref:`autoavaluació<descripcio_exercicis_autoavaluacio>`

.. rubric:: Enunciat

Ara toca afegir la funcionnalitat de duplicació de puzles.

La comanda a afegir és ``cp`` i té el següent aspecte:
``cp «nom1» «nom2»``

En cas que no es proporcioni algun dels arguments, es mostrarà el missatge
``ERROR: cp «nom1» «nom2»`` i tornarà a mostrar el *prompt*.

En cas que ``nom1`` no existeixi, el programa mostrarà l'error ``ERROR:
puzle desconegut`` i tornarà a mostrar el *prompt* sense fer cap canvi.

En cas que ``nom2`` ja existeixi, demanarà confirmació amb el missatge
``Ja existeix. El sobreescrivim?``. Només el sobreescriurà
en cas que sigui confirmat.

Per passar les proves caldrà que implementis el següent mòdul:

* ``processaCp()``: realitza tota la funcionalitat esperada per atendre la
  comanda ``cp`` incloent les comprovacions.

* ``duplicaPuzle()``: donats dos noms de puzle, crea o sobreescriu el
  fitxer corresponent al segon nom amb el contingut del fitxer
  corresponent al primer nom.

  Per exemple, ``duplicaPuzle("negres_mmate_en_un", "blanques_mate_en_un")``
  farà que el fitxer ``puzle_blanques_mate_en_un.txt`` contingui el mateix
  que ``puzle_negres_mate_en_un.txt``.

  Tot i que hi ha altres mecanismes, et proposo que simplement obris els
  dos fitxers i copiïs el contingut del primer al segon.
